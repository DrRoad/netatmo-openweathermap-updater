{
    "$connections": {
        "value": {
            "azurequeues": {
                "connectionId": "/subscriptions/794ae59a-cdda-4713-bc0d-d599c0de52a2/resourceGroups/netatmo/providers/Microsoft.Web/connections/azurequeues",
                "connectionName": "azurequeues",
                "id": "/subscriptions/794ae59a-cdda-4713-bc0d-d599c0de52a2/providers/Microsoft.Web/locations/northeurope/managedApis/azurequeues"
            },
            "slack": {
                "connectionId": "/subscriptions/794ae59a-cdda-4713-bc0d-d599c0de52a2/resourceGroups/netatmo/providers/Microsoft.Web/connections/slack",
                "connectionName": "slack",
                "id": "/subscriptions/794ae59a-cdda-4713-bc0d-d599c0de52a2/providers/Microsoft.Web/locations/northeurope/managedApis/slack"
            }
        }
    },
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Delete_message": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azurequeues']['connectionId']"
                        }
                    },
                    "method": "delete",
                    "path": "/@{encodeURIComponent('slack')}/messages/@{encodeURIComponent(triggerBody()?['MessageId'])}",
                    "queries": {
                        "popreceipt": "@triggerBody()?['PopReceipt']"
                    }
                },
                "runAfter": {
                    "Post_message": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@triggerBody()?['MessageText']",
                    "schema": {
                        "properties": {
                            "Humidity": {
                                "type": "number"
                            },
                            "Temperature": {
                                "type": "number"
                            },
                            "TimestampUtc": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {},
                "type": "ParseJson"
            },
            "Post_message": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['slack']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/chat.postMessage",
                    "queries": {
                        "channel": "C5TD51R96",
                        "text": "Temperature in Berlin, Mitte, 10115 at @{body('Parse_JSON')?['TimestampUtc']} is @{body('Parse_JSON')?['Temperature']}C and humidity @{body('Parse_JSON')?['Humidity']}%"
                    }
                },
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_there_are_messages_in_a_queue": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azurequeues']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/@{encodeURIComponent('slack')}/message_trigger"
                },
                "recurrence": {
                    "frequency": "Minute",
                    "interval": 5
                },
                "splitOn": "@triggerBody()?['QueueMessagesList']?['QueueMessage']",
                "type": "ApiConnection"
            }
        }
    }
}